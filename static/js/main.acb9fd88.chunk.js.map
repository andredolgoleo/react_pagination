{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","amountOfPages","Math","ceil","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","Array","map","_","pageLinkNumber","active","uuidv4","items","from","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","startIndex","endIndex","length","foundItems","slice","id","value","onChange","event","target","handleOnChangeSelect","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"mOAWaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBE,EAEnC,OACE,qBAAIK,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAAUJ,IAJhB,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WACFN,GACHJ,EAAaD,EAAc,IAPjC,oBAcD,YAAIY,MAAMV,IAAgBW,KAAI,SAACC,EAAGC,GAAJ,OAC7B,oBACER,UAAWC,IACT,YACA,CACEQ,OAAQhB,IAAgBe,EAAiB,IAJ/C,SASE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAI,WAAMK,EAAiB,GAC3BJ,QAAS,kBAAMV,EAAac,EAAiB,IAJ/C,SAMGA,EAAiB,KARfE,kBAaT,oBACEV,UAAWC,IACT,YACA,CACEC,SAAUH,IAJhB,SAQE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WACFL,GACHL,EAAaD,EAAc,IAPjC,wBCpEFkB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBX,KAAI,SAAAS,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAEMC,GAAc7B,EAAc,GAAKD,EACjC+B,EAAW9B,EAAcD,EAAUmB,EAAMa,OAC3C/B,EAAcD,EACdmB,EAAMa,OAEJC,EAAad,EAAMe,MAAMJ,EAAYC,GAa3C,OACE,sBAAKvB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC6B,EAAa,EAD9C,cACqDC,EADrD,eACoEZ,EAAMa,OAD1E,OAIA,sBAAKxB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,MAAOpC,EACPqC,SAAU,SAAAC,GAAK,OAtBI,SAC3BA,GAEAV,GAAYU,EAAMC,OAAOH,OACzBP,EAAe,GAkBYW,CAAqBF,IAL1C,UAOE,wBAAQF,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOK,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOoB,EAAMa,OACbhC,QAASA,EACTC,YAAaA,EACbC,aA3CqB,SAACwC,GAC1Bb,EAAea,MA4Cb,6BACGT,EAAWnB,KAAI,SAAC6B,GAAD,OACd,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEhElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.acb9fd88.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid'\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: CallableFunction,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const amountOfPages = Math.ceil(total / perPage);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === amountOfPages;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isFirstPage,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (!isFirstPage) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {[...Array(amountOfPages)].map((_, pageLinkNumber) => (\n        <li\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === pageLinkNumber + 1,\n            },\n          )}\n          key={uuidv4()}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageLinkNumber + 1}`}\n            onClick={() => onPageChange(pageLinkNumber + 1)}\n          >\n            {pageLinkNumber + 1}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isLastPage,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => {\n            if (!isLastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = currentPage * perPage < items.length\n    ? currentPage * perPage\n    : items.length;\n\n  const foundItems = items.slice(startIndex, endIndex);\n\n  const handleOnPageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handleOnChangeSelect = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex + 1} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => handleOnChangeSelect(event)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleOnPageChange}\n      />\n      <ul>\n        {foundItems.map((item) => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}